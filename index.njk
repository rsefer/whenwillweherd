---
layout: default.njk
title: 'Home'
---

<div class="bg-gray-50 dark:bg-gray-800 py-6 md:py-12 text-center">
  <div class="mx-auto max-w-7xl px-4 lg:px-8">
		<h1 class="text-4xl tracking-tight font-extrabold text-gray-900 dark:text-gray-300 sm:text-5xl md:text-6xl">
			<span class="block xl:inline">When will we reach</span>
			<span class="block text-indigo-600 xl:inline">Herd Immunity?</span>
		</h1>
		<p class="mt-3 text-base text-gray-600 dark:text-gray-300 sm:mt-5 sm:text-md md:mt-5 mx-auto max-w-4xl">
			Herd immunity is based on <span>{{ data.formatted.herdPercentageLabel }}%</span> of the population being fully vaccinated.
			<br><em class="text-sm">Update 3/28: <a style="text-decoration: underline;" href="https://www.healthline.com/health/why-two-doses-of-covid-vaccine#immunity-after-first-dose">Many widely-accepted studies</a> have shown high effectiveness from the first dose 14 to 15 days after administration. We are including an estimate for herd immunity based on the percentage of population having received at least 1 dose for reference.</em>
			<br><br><strong>Please refer to <a href="https://covid.cdc.gov/covid-data-tracker/#vaccinations" class="text-green-400">CDC guidelines</a> for more accurate information.</strong>
		</p>
		<div class="mt-6 text-gray-600 dark:text-gray-300 text-xs text-center">
			<p>Most recent data: {{ data.formatted.lastDate }} pulled from the CDC via <a href="https://github.com/owid/covid-19-data/tree/master/public/data/vaccinations" class="text-red-400">owid/covid-19-data</a>.</p>
			<p class="mt-1">Site last updated: <span class="last-updated"></span></p>
		</div>
  </div>
</div>

<div class="lg:container lg:mx-auto p-6 pb-6 md:pt-12 md:pb-12 md:px-6 dark:pt-3 md:dark:pt-0">
	<div id="charts-wrap" class="charts-wrap grid grid-cols-1 md:grid-cols-2 gap-6 lg:gap-12"></div>
</div>

<div id="notes" class="bg-gray-50 dark:bg-gray-800 p-12">
	<div class="container mx-auto max-w-3xl">
		<h2 class="text-2xl tracking-tight font-extrabold text-gray-900 dark:text-gray-300">Notes</h2>
		<ul class="text-gray-600 dark:text-gray-300 mt-3 list-disc">
			<li>This site is intended to act as quick reference to the latest vaccination data. There are almost certainly inaccuracies in the data, calculations, and guesses. <strong>Please refer to CDC guidelines for more accurate information.</strong></li>
			<li>As vaccination administration ramps up and the 7 Day Rolling Average changes, the herd immunity date will also change. This date is purely an educated guess/estimate based on available data.</li>
		</ul>
	</div>
</div>

<div class="container mx-auto max-w-xl p-12">
	<div class="text-center">
		<p class="text-gray-600 dark:text-gray-300 mt-3 text-xs">
			This site is made by <a href="https://seferdesign.com" class="text-red-400">Sefer Design Co.</a>, with inspiration from <a href="https://www.bloomberg.com/graphics/covid-vaccine-tracker-global-distribution/" class="text-green-400">Bloomberg</a>, <a href="https://www.nytimes.com/interactive/2020/us/covid-19-vaccine-doses.html" class="text-green-400">The New York Times</a>, and many others. Contribute on <a href="https://github.com/rsefer/whenwillweherd" class="text-blue-400">GitHub</a>.
		</p>
	</div>
</div>

<div aria-hidden="true">

	<div class="entity-template">
		<div class="bg-white dark:bg-gray-500 dark:text-gray-300 shadow overflow-hidden rounded-md sm:rounded-lg">
			<div class="bg-gray-200 dark:bg-gray-600 px-4 py-5 sm:px-6 sm:flex justify-between items-center sm:gap-4">
				<div class="entity-title flex-grow text-center sm:text-left text-lg leading-6 font-medium text-gray-900 dark:text-gray-50"></div>
				<div class="entity-selection mt-4 sm:mt-0 flex-grow-0">
					<select name="select-state" autocomplete="state" class="block w-full py-2 px-2 sm:py-0 sm:py-0 border border-gray-300 bg-white text-gray-700 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm">
						<option>Select State</option>
						{% for entity in data.formatted.entities %}
						{% if entity.name == 'United States' %}{% else %}
						<option value="{{ entity.name }}">{% if entity.name == 'New York State' %}New York{% else %}{{ entity.name }}{% endif %}</option>
						{% endif %}
						{% endfor %}
					</select>
				</div>
			</div>
			<div>
				<div class="bg-green-400 dark:bg-green-500 px-4 py-5 grid grid-cols-2 sm:gap-4 sm:px-6 text-white">
					<p class="font-semibold text-center col-span-2">Herd Immunity<span class="block md:inline"><span class="hidden md:inline"> </span><small>({{ data.formatted.herdPercentageLabel }}% of the population)</small></span></p>
					<div class="single-vacinated-el text-sm font-medium">
						<p class="font-semibold mt-4 mb-6">1+ Dose</p>
						<p class="font-semibold">Fully Vaccinated</p>
					</div>
					<div class="single-vacinated-el mt-1 text-sm sm:mt-0 text-right">
						<p class="entity-herd-date-single font-bold mt-4 mb-6"></p>
						<p class="entity-herd-date-double font-bold"></p>
					</div>
				</div>
			</div>
			<div class="vaccinations-chart bg-white pt-6 pb-2 md:px-6"></div>
			<div class="border-t border-b border-gray-200">
				<div class="px-4 py-4 grid grid-cols-2 sm:gap-4 sm:px-6">
					<div class="text-sm font-medium text-gray-600 dark:text-gray-50">
						Population
					</div>
					<div class="entity-population mt-1 text-sm text-gray-900 dark:text-gray-50 sm:mt-0 text-right">
					</div>
				</div>
				<div class="px-4 py-4 grid grid-cols-2 sm:gap-4 sm:px-6">
					<div class="text-sm font-medium text-gray-600 dark:text-gray-50">
						Doses Given
					</div>
					<div class="mt-1 text-sm text-gray-900 dark:text-gray-50 sm:mt-0 text-right">
						<div class="entity-vacs-given"></div>
						<div><small><em>(<span class="entity-vacs-per-100"></span> per 100)</em></small></div>
					</div>
				</div>
			</div>
			<div class="single-chart bg-white pt-6 pb-2 md:px-6"></div>
			<div class="fully-chart bg-white pt-6 pb-2 md:px-6"></div>
		</div>
	</div>

</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/highcharts/9.0.1/highcharts.min.js" integrity="sha512-EIJ4kNprq9ImB7okK8Wy5o4frtpx1zERP1A3ZrLXr5nOGEWhVViC1XVuzJ8GGG89sJ/bKbtw+6TsQlul9/WcEg==" crossorigin="anonymous"></script>

<script>
{% set js %}
document.querySelector('.last-updated').textContent = new Date('{{ data.timestamp }}').toLocaleString();

var urlParams = new URLSearchParams(window.location.search);
var stateName = urlParams.get('state') || 'Illinois';
if (stateName == 'New York') {
	stateName = 'New York State';
}

var data = {{ data.raw | safe }};

var entities = [
	data.entities.find(entity => entity.name == stateName),
	data.entities.find(entity => entity.name == 'United States')
];

Highcharts.setOptions({
	lang: {
		thousandsSep: ','
	},
	chart: {
		type: 'column',
		height: '250',
		style: {
			fontFamily: '-apple-system, \'Helvetica Neue\', sans-serif'
		}
	},
	plotOptions: {
		series: {
			animation: false
		}
	},
});

var charts = [];

entities.forEach(function(entity, i) {
	var entityTemplate = document.querySelector('.entity-template').innerHTML;
	document.querySelector('#charts-wrap').innerHTML = document.querySelector('#charts-wrap').innerHTML + '<div id="entity-' + i + '" class="entity">' + entityTemplate + '</div>';
	var entityBlock = document.getElementById('entity-' + i);
	if (entity.name == 'United States') {
		entityBlock.querySelector('.entity-selection').remove();
		entityBlock.querySelector('.entity-title').classList.add('sm:text-center');
	}
	entityBlock.querySelector('.vaccinations-chart').id = 'vaccinations-chart-' + i;
	entityBlock.querySelector('.single-chart').id = 'single-chart-' + i;
	entityBlock.querySelector('.fully-chart').id = 'fully-chart-' + i;
	entityBlock.querySelector('.entity-title').textContent = entity.name;
	if (entity.abv) {
		entityBlock.querySelector('.entity-title').innerHTML = '<img src="/images/flags/' + entity.abv.toLowerCase() + '.svg" alt="' + entity.abv.toLowerCase() + ' flag">' + entityBlock.querySelector('.entity-title').innerHTML;
	}
	entityBlock.querySelector('.entity-population').textContent = numberWithCommas(entity.pop);
	entityBlock.querySelector('.entity-vacs-given').textContent = numberWithCommas(entity.tv);
	entityBlock.querySelector('.entity-vacs-per-100').textContent = entity.tvh;

	// herd
	entityBlock.querySelector('.entity-herd-date-double').textContent = entity.hddl;

	entityBlock.querySelector('.entity-herd-date-single').textContent = entity.hdl;

	var vaxChart = Highcharts.chart('vaccinations-chart-' + i, {
		title: {
			text: 'Daily Vaccinations'
		},
		xAxis: {
			categories: entity.days.map(day => day.d.substring(5, day.d.length)),
			labels: {
				step: 4
			}
		},
		yAxis: [
			{
				title: {
					text: 'Vaccinations'
				}
			}
		],
		series: [
			{
				name: 'Daily Vaccinations',
				type: 'column',
				data: entity.days.map(day => [day.d, day.dvr])
			},
			{
				name: '7 Day Rolling Average',
				type: 'spline',
				data: entity.days.map(day => [day.d, day.dv])
			}
		],
		tooltip: {
			shared: true
		}
	});
	var maxMultiplier = Math.min(entity.days[entity.days.length - 1].pv / entity.pop * 2, 1);
	var singleChart = Highcharts.chart('single-chart-' + i, {
		title: {
			text: 'People with 1+ Dose'
		},
		legend: {
			enabled: false
		},
		xAxis: {
			categories: entity.days.map(day => day.d.substring(5, day.d.length)),
			labels: {
				step: 4
			}
		},
		yAxis: [
			{
				title: {
					text: 'People'
				},
				min: 0,
				max: entity.pop * maxMultiplier,
				endOnTick: false,
				gridLineWidth: 0,
				plotLines: [{
					color: '#11ba82',
					label: {
						text: 'HERD',
						align: 'left',
						textAlign: 'right',
						x: -8,
						y: 2
					},
					value: entity.hp,
					width: '1',
					zIndex: 2
				}]
			},
			{
				title: {
					text: '% of Population'
				},
				min: 0,
				max: 100 * maxMultiplier,
				endOnTick: false,
				gridLineColor: '#c7c7c7',
				opposite: true
			}
		],
		series: [
			{
				name: 'People with 1+ Dose',
				type: 'areaspline',
				data: entity.days.map(day => [day.d, day.pv]),
				color: '#ffc621'
			},
			{ // only included for axis purposes
				name: 'Percentage of Population',
				type: 'line',
				yAxis: 1,
				visible: false,
				data: entity.days.map(day => [day.d, (day.pv / entity.pop) * 100])
			}
		],
		tooltip: {
			formatter: function(tooltip) {
				var newTooltip = tooltip.defaultFormatter.call(this, tooltip);
				newTooltip[2] = '<strong>' + (this.y / entity.pop * 100).toFixed(2) + '% of population</strong>';
				return newTooltip;
			}
		}
	});
	maxMultiplier = Math.min(entity.days[entity.days.length - 1].pfv / entity.pop * 2, 1);
	var fullyChart = Highcharts.chart('fully-chart-' + i, {
		title: {
			text: 'People Fully Vaccinated'
		},
		legend: {
			enabled: false
		},
		xAxis: {
			categories: entity.days.map(day => day.d.substring(5, day.d.length)),
			labels: {
				step: 4
			}
		},
		yAxis: [
			{
				title: {
					text: 'People'
				},
				min: 0,
				max: entity.pop * maxMultiplier,
				endOnTick: false,
				gridLineWidth: 0,
				plotLines: [{
					color: '#11ba82',
					label: {
						text: 'HERD',
						align: 'left',
						textAlign: 'right',
						x: -8,
						y: 2
					},
					value: entity.hp,
					width: '1',
					zIndex: 2
				}]
			},
			{
				title: {
					text: '% of Population'
				},
				min: 0,
				max: 100 * maxMultiplier,
				endOnTick: false,
				gridLineColor: '#c7c7c7',
				opposite: true
			}
		],
		series: [
			{
				name: 'People Fully Vaccinated',
				type: 'areaspline',
				data: entity.days.map(day => [day.d, day.pfv]),
				color: '#11ba82'
			},
			{ // only included for axis purposes
				name: 'Percentage of Population',
				type: 'line',
				yAxis: 1,
				visible: false,
				data: entity.days.map(day => [day.d, (day.pfv / entity.pop) * 100])
			}
		],
		tooltip: {
			formatter: function(tooltip) {
				var newTooltip = tooltip.defaultFormatter.call(this, tooltip);
				newTooltip[2] = '<strong>' + (this.y / entity.pop * 100).toFixed(2) + '% of population</strong>';
				return newTooltip;
			}
		}
	});

	charts.push(vaxChart);
	charts.push(singleChart);
	charts.push(fullyChart);

	setTimeout(function() {
		vaxChart.reflow();
	}, 500);

	document.querySelector('[name="select-state"]').addEventListener('change', function() {
		window.location.href = '/?state=' + this.value;
	});
});

setTimeout(function() {
	charts.forEach(function(chart) {
		chart.redraw();
	});
}, 3500);


function numberWithCommas(x) {
	return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',');
}
{% endset %}
{{ js | jsmin | safe }}
</script>
